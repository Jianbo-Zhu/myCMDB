entity Contactor {
	name String required,
    phone String required
}
entity DataCenter {
	dcName String required,
    address String required
}
relationship OneToOne {
	DataCenter{ contractor(name) } to Contactor
}

entity Application {
	appName String required,
    environment String required,
}
entity ComponentEntity {
	comName String required,
    comType ComponentType required
}

enum ComponentType{
	MODULE, MIDDLEWARE
}

relationship OneToMany {
	Application{ components(comName) } to ComponentEntity{ app(appName) }
}

entity Server {
	hostname String required,
    ipAddress String required,
    macAddress String required,
    position String required,
    brand String required,
    memSize Integer required,
    coreNo Integer required,
    osVersion String required,
    vendor String required,
    purchaseDate LocalDate required,
    warrantyDate LocalDate required
}

relationship OneToMany {
	Server{ components(comName) } to ComponentEntity{ server(hostname) required }
}

relationship ManyToOne {
	Server{ dataCenter(dcName) } to DataCenter
}
relationship ManyToOne {
	Server{ owner(name) } to Contactor
}
relationship ManyToOne {
	Server{ vendorContact(name) } to Contactor
}


// Set pagination options
// paginate JobHistory, Employee with infinite-scroll
// paginate Job with pagination

// Use Data Transfert Objects (DTO)
// dto * with mapstruct

// Set service options to all except few
service all with serviceImpl

// Set an angular suffix
// angularSuffix * with mySuffix
